Звіт по виконаній роботі
Тема: Аналіз успішних бізнес-моделей у сфері цифрових технологій
Мета роботи:
Вивчити динаміку доходів цифрових бізнес-моделей, провести розкладення часових рядів на складові та оцінити наявність тренду і сезонності.

Підготовка даних
Було створено штучний часовий ряд доходів цифрових бізнес-моделей за 10 років (2015–2024). Дані включають:
тренд – поступове зростання доходу;
сезонність – невеликі коливання доходу;
випадковий шум для імітації реальних флуктуацій.
Дані збережено у CSV-файл biznes_modeli.csv для подальшого аналізу.
скріншот прикладу з даними 
Рік,Дохід_млн
2015,122.48357076505616
2016,149.3086784941441
2017,163.23844269050346
2018,177.61514928204014
2019,198.82923312638331
2020,228.8293152152541
2021,247.89606407753695
2022,253.83717364576455
2023,277.65262807032525
2024,312.71280021792984

Візуалізація даних
Графік доходу показує стабільне зростання ряду, що вказує на присутність позитивного тренду.
На графіку також видно незначні коливання, які відповідають сезонності.

Перевірка наявності тренду
Для оцінки тенденції використано критерій «висхідних і низхідних серій» (run test):
Статистика тесту: z = …, p-value = …
Висновок: тенденція в часовому ряду присутня.
Це підтверджує спостереження з графіка.

Розкладення часових рядів
Ряд було розкладено на три складові:
Тренд: поступове зростання доходу → свідчить про успішність цифрових бізнес-моделей у довгостроковій перспективі.
Сезонність: невеликі коливання доходу кожні 4 роки; яскраво не виражена, але врахована у моделі.
Залишки: випадкові флуктуації, автокореляція низька, що підтверджує коректність розкладення.
5. Автокореляційна функція залишків
Автокореляційна функція залишків показала відсутність значних залежностей між сусідніми значеннями. Висновок: розкладення рядка на тренд, сезонність та залишки виконано коректно.





6. Результати роботи та код
Скріншот графіків розкладення та автокореляції:



Код що був використаний:
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import statsmodels.api as sm
from statsmodels.graphics.tsaplots import plot_acf


np.random.seed(42)
years = list(range(2015, 2025))


trend = np.linspace(120, 300, 10)
seasonality = 10 * np.sin(np.arange(10) * 2 * np.pi / 4)
noise = np.random.normal(0, 5, 10) 
income = trend + seasonality + noise


data = {
    "Рік": years,
    "Дохід_млн": income
}

df = pd.DataFrame(data)

df.to_csv("biznes_modeli.csv", index=False, encoding="utf-8-sig")


series = pd.Series(df["Дохід_млн"].values, index=pd.date_range("2015", periods=10, freq="Y"))
decomposition = sm.tsa.seasonal_decompose(series, model="additive", period=4)


fig, axes = plt.subplots(3, 2, figsize=(12, 8))


axes[0, 0].plot(df["Рік"], df["Дохід_млн"], marker="o")
axes[0, 0].set_title("Динаміка доходу")
axes[0, 0].set_xlabel("Рік")
axes[0, 0].set_ylabel("Дохід, млн")
axes[0, 0].grid(True)


decomposition.trend.plot(ax=axes[0, 1])
axes[0, 1].set_title("Тренд")


decomposition.seasonal.plot(ax=axes[1, 0])
axes[1, 0].set_title("Сезонність")


decomposition.resid.plot(ax=axes[1, 1])
axes[1, 1].set_title("Залишки")


plot_acf(decomposition.resid.dropna(), ax=axes[2, 0])
axes[2, 0].set_title("Автокореляція залишків")


axes[2, 1].axis("off")





Загальні висновки
Тренд доходу: Динаміка доходів цифрових бізнес-моделей демонструє стабільне зростання протягом аналізованого періоду, що свідчить про наявність стійкого позитивного тренду та ефективність обраних бізнес-моделей.
Сезонність: Коливання доходів мають незначний характер і не впливають суттєво на загальний тренд, що дозволяє робити довгострокові прогнози без значних коригувань.
Випадкові флуктуації: Залишки ряду мають низьку автокореляцію, що підтверджує коректність розкладення часових рядів і відсутність систематичних похибок у моделі.
Використання Python: Реалізація аналізу в Python дозволяє повністю замінити STATISTICA, забезпечуючи гнучку обробку даних, створення наочних графіків і проведення статистичних тестів у зручному та повторюваному форматі.



